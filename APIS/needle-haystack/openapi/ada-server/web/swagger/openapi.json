{
  "openapi" : "3.0.2",
  "info" : {
    "license" : {
      "name" : "MIT"
    },
    "title" : "API Inspector",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/openapi-jaxrs-server-1.0.0/api/v3"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Created user object"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "summary" : "Create user",
        "tags" : [ "user" ]
      }
    },
    "/user/createWithList" : {
      "post" : {
        "description" : "Creates list of users with given input array",
        "operationId" : "createUsersWithListInput",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/User"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Creates list of users with given input array",
        "tags" : [ "user" ],
        "x-swagger-router-controller" : "UserController"
      }
    },
    "/user/login" : {
      "get" : {
        "description" : "",
        "operationId" : "loginUser",
        "parameters" : [ {
          "description" : "The user name for login",
          "explode" : true,
          "in" : "query",
          "name" : "username",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The password for login in clear text",
          "explode" : true,
          "in" : "query",
          "name" : "password",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "explode" : false,
                "schema" : {
                  "format" : "int32",
                  "type" : "integer"
                },
                "style" : "simple"
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "explode" : false,
                "schema" : {
                  "format" : "date-time",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        },
        "summary" : "Logs user into the system",
        "tags" : [ "user" ]
      }
    },
    "/user/logout" : {
      "get" : {
        "description" : "",
        "operationId" : "logoutUser",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Logs out current logged in user session",
        "tags" : [ "user" ]
      }
    },
    "/user/{username}" : {
      "delete" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "description" : "The name that needs to be deleted",
          "explode" : false,
          "in" : "path",
          "name" : "username",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "summary" : "Delete user",
        "tags" : [ "user" ]
      },
      "get" : {
        "description" : "",
        "operationId" : "getUserByName",
        "parameters" : [ {
          "description" : "The name that needs to be fetched. Use user1 for testing. ",
          "explode" : false,
          "in" : "path",
          "name" : "username",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "summary" : "Get user by user name",
        "tags" : [ "user" ]
      },
      "put" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "description" : "name that need to be deleted",
          "explode" : false,
          "in" : "path",
          "name" : "username",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Update an existent user in the store"
        },
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Update user",
        "tags" : [ "user" ],
        "x-swagger-router-controller" : "UserController"
      }
    },
    "/cheese" : {
      "post" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createCheese",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            }
          },
          "description" : "Created cheese object"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "summary" : "Create Cheese",
        "tags" : [ "cheese" ]
      }
    },
    "/cheese/createWithList" : {
      "post" : {
        "description" : "Creates list of cheese with given input array",
        "operationId" : "createCheesesWithListInput",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Cheese"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              }
            },
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Creates list of Cheese with given input array",
        "tags" : [ "cheese" ],
        "x-swagger-router-controller" : "CheeseController"
      }
    },
    "/cheese/{name}" : {
      "delete" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteCheese",
        "parameters" : [ {
          "description" : "The cheese that needs to be deleted by name",
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid Cheese variable supplied"
          },
          "404" : {
            "description" : "Cheese not found"
          }
        },
        "summary" : "Delete cheese",
        "tags" : [ "cheese" ]
      },
      "get" : {
        "description" : "",
        "operationId" : "getCheeseByName",
        "parameters" : [ {
          "description" : "The name that needs to be fetched. Use cheese1 for testing. ",
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "format" : "string",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cheese"
                }
              }
            },
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid Cheese variable supplied"
          },
          "404" : {
            "description" : "Cheese not found"
          }
        },
        "summary" : "Get cheese by name",
        "tags" : [ "cheese" ]
      },
      "put" : {
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateCheese",
        "parameters" : [ {
          "description" : "name of cheese that needs to be deleted",
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "format" : "string",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cheese"
              }
            }
          },
          "description" : "Update an existent cheese in the system"
        },
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Update cheese",
        "tags" : [ "cheese" ],
        "x-swagger-router-controller" : "CheeseController"
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "example" : {
          "firstName" : "John",
          "lastName" : "James",
          "password" : "123456789abC",
          "userStatus" : 1,
          "phone" : "14168785282",
          "id" : 10,
          "email" : "john@email.com",
          "username" : "theUser"
        },
        "properties" : {
          "id" : {
            "example" : 10,
            "format" : "int64",
            "type" : "integer"
          },
          "username" : {
            "example" : "theUser",
            "type" : "string"
          },
          "firstName" : {
            "example" : "John",
            "type" : "string"
          },
          "lastName" : {
            "example" : "James",
            "type" : "string"
          },
          "email" : {
            "example" : "john@email.com",
            "type" : "string"
          },
          "password" : {
            "example" : "123456789abC",
            "type" : "string"
          },
          "phone" : {
            "example" : "14168785282",
            "type" : "string"
          },
          "userStatus" : {
            "description" : "User Status",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "user"
        },
        "x-swagger-router-model" : "io.swagger.model.User"
      },
      "Error" : {
        "properties" : {
          "code" : {
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ],
        "type" : "object",
        "xml" : {
          "name" : "error"
        }
      },
      "Cheese" : {
        "example" : {
          "name" : "Enter text here.."
        },
        "properties" : {
          "name" : {
            "default" : "Enter text here..",
            "format" : "string",
            "type" : "string",
            "example" : null
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "cheese"
        },
        "x-swagger-router-model" : "io.genpen.model.Cheese"
      }
    }
  }
}