/**
* API Inspector
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server

import io.ktor.locations.*
import org.openapitools.server.models.*

@KtorExperimentalLocationsAPI
object Paths {
    /**
     * Create user
     * This can only be done by the logged in user.
     * @param user Created user object (optional)
     */
    @Location("/user") class createUser(val user: User? = null)

    /**
     * Creates list of users with given input array
     * Creates list of users with given input array
     * @param user  (optional)
     */
    @Location("/user/createWithList") class createUsersWithListInput(val user: kotlin.collections.List<User>? = null)

    /**
     * Delete user
     * This can only be done by the logged in user.
     * @param username The name that needs to be deleted 
     */
    @Location("/user/{username}") class deleteUser(val username: kotlin.String)

    /**
     * Get user by user name
     * 
     * @param username The name that needs to be fetched. Use user1 for testing.  
     */
    @Location("/user/{username}") class getUserByName(val username: kotlin.String)

    /**
     * Logs user into the system
     * 
     * @param username The user name for login (optional)
     * @param password The password for login in clear text (optional)
     */
    @Location("/user/login") class loginUser(val username: kotlin.String? = null, val password: kotlin.String? = null)

    /**
     * Logs out current logged in user session
     * 
     */
    @Location("/user/logout") object logoutUser

    /**
     * Update user
     * This can only be done by the logged in user.
     * @param username name that need to be deleted 
     * @param user Update an existent user in the store (optional)
     */
    @Location("/user/{username}") class updateUser(val username: kotlin.String, val user: User? = null)

}
