# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Client(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address=None, status=None, fk_group_id=None, credit_rating=None, active=None, email=None, created_date=None, fk_client_id=None, id=None, name=None, updated_date=None, phone=None, last_login_date=None):  # noqa: E501
        """Client - a model defined in OpenAPI

        :param address: The address of this Client.  # noqa: E501
        :type address: str
        :param status: The status of this Client.  # noqa: E501
        :type status: bool
        :param fk_group_id: The fk_group_id of this Client.  # noqa: E501
        :type fk_group_id: int
        :param credit_rating: The credit_rating of this Client.  # noqa: E501
        :type credit_rating: float
        :param active: The active of this Client.  # noqa: E501
        :type active: bool
        :param email: The email of this Client.  # noqa: E501
        :type email: str
        :param created_date: The created_date of this Client.  # noqa: E501
        :type created_date: str
        :param fk_client_id: The fk_client_id of this Client.  # noqa: E501
        :type fk_client_id: int
        :param id: The id of this Client.  # noqa: E501
        :type id: int
        :param name: The name of this Client.  # noqa: E501
        :type name: str
        :param updated_date: The updated_date of this Client.  # noqa: E501
        :type updated_date: str
        :param phone: The phone of this Client.  # noqa: E501
        :type phone: str
        :param last_login_date: The last_login_date of this Client.  # noqa: E501
        :type last_login_date: str
        """
        self.openapi_types = {
            'address': str,
            'status': bool,
            'fk_group_id': int,
            'credit_rating': float,
            'active': bool,
            'email': str,
            'created_date': str,
            'fk_client_id': int,
            'id': int,
            'name': str,
            'updated_date': str,
            'phone': str,
            'last_login_date': str
        }

        self.attribute_map = {
            'address': 'address',
            'status': 'status',
            'fk_group_id': 'fk_group_id',
            'credit_rating': 'credit_rating',
            'active': 'active',
            'email': 'email',
            'created_date': 'created_date',
            'fk_client_id': 'fk_client_id',
            'id': 'id',
            'name': 'name',
            'updated_date': 'updated_date',
            'phone': 'phone',
            'last_login_date': 'last_login_date'
        }

        self._address = address
        self._status = status
        self._fk_group_id = fk_group_id
        self._credit_rating = credit_rating
        self._active = active
        self._email = email
        self._created_date = created_date
        self._fk_client_id = fk_client_id
        self._id = id
        self._name = name
        self._updated_date = updated_date
        self._phone = phone
        self._last_login_date = last_login_date

    @classmethod
    def from_dict(cls, dikt) -> 'Client':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Client of this Client.  # noqa: E501
        :rtype: Client
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Client.

        This attribute is a variable named address  # noqa: E501

        :return: The address of this Client.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Client.

        This attribute is a variable named address  # noqa: E501

        :param address: The address of this Client.
        :type address: str
        """

        self._address = address

    @property
    def status(self):
        """Gets the status of this Client.

        This attribute is a variable named status  # noqa: E501

        :return: The status of this Client.
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Client.

        This attribute is a variable named status  # noqa: E501

        :param status: The status of this Client.
        :type status: bool
        """

        self._status = status

    @property
    def fk_group_id(self):
        """Gets the fk_group_id of this Client.

        This attribute is a variable named fk_group_id  # noqa: E501

        :return: The fk_group_id of this Client.
        :rtype: int
        """
        return self._fk_group_id

    @fk_group_id.setter
    def fk_group_id(self, fk_group_id):
        """Sets the fk_group_id of this Client.

        This attribute is a variable named fk_group_id  # noqa: E501

        :param fk_group_id: The fk_group_id of this Client.
        :type fk_group_id: int
        """
        if fk_group_id is not None and fk_group_id > 10000000:  # noqa: E501
            raise ValueError("Invalid value for `fk_group_id`, must be a value less than or equal to `10000000`")  # noqa: E501
        if fk_group_id is not None and fk_group_id < 0:  # noqa: E501
            raise ValueError("Invalid value for `fk_group_id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._fk_group_id = fk_group_id

    @property
    def credit_rating(self):
        """Gets the credit_rating of this Client.

        This attribute is a variable named credit_rating  # noqa: E501

        :return: The credit_rating of this Client.
        :rtype: float
        """
        return self._credit_rating

    @credit_rating.setter
    def credit_rating(self, credit_rating):
        """Sets the credit_rating of this Client.

        This attribute is a variable named credit_rating  # noqa: E501

        :param credit_rating: The credit_rating of this Client.
        :type credit_rating: float
        """

        self._credit_rating = credit_rating

    @property
    def active(self):
        """Gets the active of this Client.

        This attribute is a variable named active  # noqa: E501

        :return: The active of this Client.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Client.

        This attribute is a variable named active  # noqa: E501

        :param active: The active of this Client.
        :type active: bool
        """

        self._active = active

    @property
    def email(self):
        """Gets the email of this Client.

        This attribute is a variable named email  # noqa: E501

        :return: The email of this Client.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Client.

        This attribute is a variable named email  # noqa: E501

        :param email: The email of this Client.
        :type email: str
        """

        self._email = email

    @property
    def created_date(self):
        """Gets the created_date of this Client.

        This attribute is a variable named created_date  # noqa: E501

        :return: The created_date of this Client.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Client.

        This attribute is a variable named created_date  # noqa: E501

        :param created_date: The created_date of this Client.
        :type created_date: str
        """

        self._created_date = created_date

    @property
    def fk_client_id(self):
        """Gets the fk_client_id of this Client.

        This attribute is a variable named fk_client_id  # noqa: E501

        :return: The fk_client_id of this Client.
        :rtype: int
        """
        return self._fk_client_id

    @fk_client_id.setter
    def fk_client_id(self, fk_client_id):
        """Sets the fk_client_id of this Client.

        This attribute is a variable named fk_client_id  # noqa: E501

        :param fk_client_id: The fk_client_id of this Client.
        :type fk_client_id: int
        """
        if fk_client_id is not None and fk_client_id > 10000000:  # noqa: E501
            raise ValueError("Invalid value for `fk_client_id`, must be a value less than or equal to `10000000`")  # noqa: E501
        if fk_client_id is not None and fk_client_id < 0:  # noqa: E501
            raise ValueError("Invalid value for `fk_client_id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._fk_client_id = fk_client_id

    @property
    def id(self):
        """Gets the id of this Client.

        This is a GenPen.AI specific attribute  # noqa: E501

        :return: The id of this Client.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Client.

        This is a GenPen.AI specific attribute  # noqa: E501

        :param id: The id of this Client.
        :type id: int
        """
        if id is not None and id > 10000000:  # noqa: E501
            raise ValueError("Invalid value for `id`, must be a value less than or equal to `10000000`")  # noqa: E501
        if id is not None and id < 0:  # noqa: E501
            raise ValueError("Invalid value for `id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._id = id

    @property
    def name(self):
        """Gets the name of this Client.

        This is a GenPen.AI specific attribute  # noqa: E501

        :return: The name of this Client.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Client.

        This is a GenPen.AI specific attribute  # noqa: E501

        :param name: The name of this Client.
        :type name: str
        """

        self._name = name

    @property
    def updated_date(self):
        """Gets the updated_date of this Client.

        This attribute is a variable named updated_date  # noqa: E501

        :return: The updated_date of this Client.
        :rtype: str
        """
        return self._updated_date

    @updated_date.setter
    def updated_date(self, updated_date):
        """Sets the updated_date of this Client.

        This attribute is a variable named updated_date  # noqa: E501

        :param updated_date: The updated_date of this Client.
        :type updated_date: str
        """

        self._updated_date = updated_date

    @property
    def phone(self):
        """Gets the phone of this Client.

        This attribute is a variable named phone  # noqa: E501

        :return: The phone of this Client.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Client.

        This attribute is a variable named phone  # noqa: E501

        :param phone: The phone of this Client.
        :type phone: str
        """

        self._phone = phone

    @property
    def last_login_date(self):
        """Gets the last_login_date of this Client.

        This attribute is a variable named last_login_date  # noqa: E501

        :return: The last_login_date of this Client.
        :rtype: str
        """
        return self._last_login_date

    @last_login_date.setter
    def last_login_date(self, last_login_date):
        """Sets the last_login_date of this Client.

        This attribute is a variable named last_login_date  # noqa: E501

        :param last_login_date: The last_login_date of this Client.
        :type last_login_date: str
        """

        self._last_login_date = last_login_date
